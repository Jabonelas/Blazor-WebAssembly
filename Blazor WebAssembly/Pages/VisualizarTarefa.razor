@page "/exibir-tarefa/{id:int}"
@using Blazor_WebAssembly.DTOs
@using Blazor_WebAssembly.DTOs.Tarefa
@using Blazor_WebAssembly.Interfaces
@using Microsoft.AspNetCore.Components.Authorization
@using Newtonsoft.Json
@using System.Text
@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject HttpClient Http
@inject ITarefaService ITarefaService
@inject NotificacaoService notificacaoService
@inject AuthenticationStateProvider AuthenticationStateProvider


<EditForm Model="@TarefaAlterarDTO">
    <DataAnnotationsValidator />
    @* <ValidationSummary /> *@

    @if (TarefaAlterarDTO.Titulo == null)
    {
        <div class="alert alert-info text-center">
            Nenhuma tarefa encontrada
        </div>

    }
    else
    {

        <div class="card edit-form">
            <div class="card-header bg-primary text-white">
                <h3>Exibir Tarefa Detalhada</h3>
            </div>
            <div class="card-body">
                <!-- Campos organizados em grid -->
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label fw-bold">Título</label>
                        <InputText @bind-Value="TarefaAlterarDTO.Titulo" class="form-control" disabled />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label fw-bold">Prioridade</label>
                        <InputText @bind-Value="TarefaAlterarDTO.Prioridade" class="form-control" disabled />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label fw-bold">Prazo (dias)</label>
                        <InputNumber @bind-Value="TarefaAlterarDTO.Prazo" class="form-control" disabled />
                    </div>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-bold ">Descrição</label>
                    <InputTextArea @bind-Value="TarefaAlterarDTO.Descricao"
                                   class="form-control"
                                   rows="4" disabled />
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <label class="form-label fw-bold">Status</label>
                        <InputText @bind-Value="TarefaAlterarDTO.Status" class="form-control" disabled />
                    </div>
                </div>


            </div>
                <div class="card-footer text-end">
                    <button type="button" class="btn btn-secondary me-2" @onclick="() => VoltarPaginaTarefas()">Voltar</button>
                </div>

        </div>
    }

</EditForm>


@code {

    [Parameter]
    public int id { get; set; }

    private TarefaAlterarDTO TarefaAlterarDTO = new TarefaAlterarDTO();

    protected override async Task OnInitializedAsync()
    {
        try
        {

            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

            var user = authState.User;

            if (!user.Identity.IsAuthenticated)
            {
                await notificacaoService.MostrarErro("Sessão expirada. Por favor, faça login novamente.");

                Navigation.NavigateTo("/login");
            }

            (bool success, string errorMessage, TarefaAlterarDTO tarefa) = await ITarefaService.BuscarTarefaAsync(id);

            if (success)
            {

                TarefaAlterarDTO = tarefa;
            }
            else
            {
                await notificacaoService.MostrarErro(errorMessage);
            }

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao visualizar tarefas: {ex.Message}");

            await notificacaoService.MostrarErro($"Ocorreu um erro interno. Nossa equipe já foi notificada.");
        }
    }

    private async void VoltarPaginaTarefas()
    {
        Navigation.NavigateTo($"/tarefa-rolagem");
    }

}
