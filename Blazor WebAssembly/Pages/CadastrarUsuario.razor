@page "/cadastrar-usuario"
@using Blazor_WebAssembly.DTOs.Usuario
@using Blazor_WebAssembly.Interfaces
@using Microsoft.AspNetCore.Components.Authorization
@using Newtonsoft.Json
@using System.Text
@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject HttpClient Http
@inject IUsuarioService iUsuarioService
@inject NotificacaoService notificacaoService
@inject IJSRuntime JS
@* @inject AuthenticationStateProvider AuthenticationStateProvider *@
@inject Blazored.LocalStorage.ILocalStorageService localStorage



<EditForm Model="@UsuarioCadastrarDTO" OnValidSubmit="@HandleSubmit">
    <DataAnnotationsValidator />

    <div class="container-fluid min-vh-100 bg-light p-0">
        <div class="row g-0 min-vh-100">
            <!-- Painel Esquerdo (Background) -->
            <div class="col-lg-6 d-none d-lg-block">
                <div class="h-100" style="background: linear-gradient(135deg, #1e3a8a 0%, #1e40af 100%);">
                    <div class="d-flex flex-column justify-content-center align-items-center h-100 text-white p-5">
                        <div style="max-width: 500px;">
                            <h1 class="display-4 mb-4"><i class="bi bi-people-fill"></i> Cadastro de Usuários</h1>
                            <p class="lead">Preencha os campos ao lado para criar sua conta no OrgaTask e transforme sua produtividade.</p>
                            <div class="mt-5">
                                <div class="d-flex align-items-center mb-3">
                                    <i class="bi bi-check-circle-fill fs-4 me-3"></i>
                                    <span>Controle de acesso pessoal e seguro</span>
                                </div>
                                <div class="d-flex align-items-center mb-3">
                                    <i class="bi bi-check-circle-fill fs-4 me-3"></i>
                                    <span>Organize suas tarefas de forma simples</span>
                                </div>
                                <div class="d-flex align-items-center mb-3">
                                    <i class="bi bi-check-circle-fill fs-4 me-3"></i>
                                    <span>Acompanhe o progresso das suas tarefas</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Painel Direito (Formulário) -->
            <div class="col-lg-6 d-flex align-items-center justify-content-center p-4 bg-light">
                <div class="w-100" style="max-width: 600px;">
                    <div class="text-center mb-5 d-lg-none">
                        <h2 class="text-primary"><i class="bi bi-person-plus"></i> Novo Usuário</h2>
                    </div>

                    <div class="card shadow-sm border-0">
                        <div class="card-body p-4">
                            <!-- Nome Completo -->
                            <div class="mb-4">
                                <label class="form-label fw-bold">Nome Completo</label>
                                <InputText @bind-Value="UsuarioCadastrarDTO.Nome"
                                           class="form-control form-control-lg" />
                                <ValidationMessage For="@(() => UsuarioCadastrarDTO.Nome)" class="text-danger small" />
                            </div>

                            <!-- Nome de Usuário -->
                            <div class="mb-4">
                                <label class="form-label fw-bold">Nome de Usuário</label>
                                <InputText @bind-Value="UsuarioCadastrarDTO.Login"
                                           class="form-control form-control-lg" />
                                <ValidationMessage For="@(() => UsuarioCadastrarDTO.Login)" class="text-danger small" />
                            </div>

                            <!-- Senha e Confirmar Senha -->
                            <div class="row g-3 mb-4">
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">Senha</label>
                                    <div class="input-group">
                                        <InputText type="password" @bind-Value="UsuarioCadastrarDTO.Senha"
                                                   class="form-control form-control-lg" id="fullPassword" />
                                        <button class="btn btn-outline-secondary" type="button"
                                                onclick="togglePassword('fullPassword')">
                                            <i class="bi bi-eye"></i>
                                        </button>
                                    </div>
                                    <ValidationMessage For="@(() => UsuarioCadastrarDTO.Senha)" class="text-danger small" />
                                </div>

                                <div class="col-md-6">
                                    <label class="form-label fw-bold">Confirmar Senha</label>
                                    <div class="input-group">
                                        <InputText type="password" @bind-Value="UsuarioCadastrarDTO.ConfirmarSenha"
                                                   class="form-control form-control-lg" id="fullConfirmPassword" />
                                        <button class="btn btn-outline-secondary" type="button"
                                                onclick="togglePassword('fullConfirmPassword')">
                                            <i class="bi bi-eye"></i>
                                        </button>
                                    </div>
                                    <ValidationMessage For="@(() => UsuarioCadastrarDTO.ConfirmarSenha)" class="text-danger small" />
                                </div>
                            </div>

                            <!-- Botões -->
                            <div class="d-flex justify-content-between pt-3">
                                <button type="button"
                                        class="btn btn-outline-secondary px-4"
                                        @onclick="CancelarCadastro">
                                    <i class="bi bi-x-lg me-1"></i> Cancelar
                                </button>

                                <button type="submit"
                                        class="btn btn-primary px-4"
                                        disabled="@isSubmitting">
                                    <span class="spinner-border spinner-border-sm me-1"
                                          hidden="@(!isSubmitting)"></span>
                                    <i class="bi bi-check-lg me-1" hidden="@isSubmitting"></i>
                                    @(isSubmitting ? "Cadastrando..." : "Cadastrar")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>



<script>
    function togglePassword(id) {
        const input = document.getElementById(id);
        const icon = input.nextElementSibling.querySelector('i');

        if (input.type === 'password') {
            input.type = 'text';
            icon.classList.remove('bi-eye');
            icon.classList.add('bi-eye-slash');
        } else {
            input.type = 'password';
            icon.classList.remove('bi-eye-slash');
            icon.classList.add('bi-eye');
        }
    }
</script>





@code {

    private bool isSubmitting = false;

    private UsuarioCadastrarDTO UsuarioCadastrarDTO = new UsuarioCadastrarDTO();

    private UsuarioLoginDTO UsuarioLoginDTO = new UsuarioLoginDTO();

    private async Task HandleSubmit()
    {
        try
        {
            if (UsuarioCadastrarDTO.Senha != UsuarioCadastrarDTO.ConfirmarSenha)
            {
                await notificacaoService.MostrarErro("As senhas não coincidem!");

                return;
            }

            var (sucesso, errorMessage) = await iUsuarioService.CadastrarUsuarioAsync(UsuarioCadastrarDTO);

            if (sucesso)
            {
                await notificacaoService.MostrarSucesso("Usuário cadastrado com sucesso!");

                UsuarioLoginDTO.login = UsuarioCadastrarDTO.Login;
                UsuarioLoginDTO.senha = UsuarioCadastrarDTO.Senha;

                await iUsuarioService.LoginAsync(UsuarioLoginDTO);

                LimparCampos();

                Navigation.NavigateTo("/", forceLoad: true);

                // Navigation.NavigateTo($"/tarefa-rolagem/todas");
            }
            else
            {
                await notificacaoService.MostrarErro(errorMessage);
            }
        }
        catch (Exception ex)
        {

            Console.WriteLine($"Erro ao cadastrar usuario: {ex.Message}");

            await notificacaoService.MostrarErro($"Ocorreu um erro interno. Nossa equipe já foi notificada.");
        }
    }


    private void LimparCampos()
    {
        UsuarioCadastrarDTO.Nome = "";
        UsuarioCadastrarDTO.Login = "";
        UsuarioCadastrarDTO.Senha = "";
    }

    private async void CancelarCadastro()
    {
        bool confirmado = await notificacaoService.MostrarConfirmacao("Atenção!", "Tem certeza que deseja cancelar o cadastro do usuário?");

        if (confirmado)
        {
            Navigation.NavigateTo($"/");

        }
    }
}
